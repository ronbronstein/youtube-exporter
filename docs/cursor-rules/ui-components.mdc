---
description: 
globs: 
alwaysApply: false
---
# UI Components & Windows XP Styling

## Windows XP Design System

### CSS Variable System (Current Implementation)
All styling uses CSS variables from `src/styles/main.css`:
```css
--xp-window-bg: #ece9d8           /* Main window background */
--xp-button-face: #ece9d8         /* Button face color */
--xp-text: #1a1a1a                /* Primary text (improved contrast) */
--xp-selection-bg: #2c5aa0        /* Selection background */
--xp-border-dark: #707070         /* Dark borders */
--xp-font-family: 'Tahoma', 'Segoe UI', 'MS Sans Serif', sans-serif
--xp-font-size: 14px              /* Modernized from 11px */
--xp-spacing-sm: 8px              /* Consistent spacing */
--xp-border-radius: 3px           /* Subtle rounding */
--xp-transition-normal: 0.25s cubic-bezier(0.4, 0, 0.2, 1)
```

### Typography (Updated)
- **Primary Font**: Tahoma (with modern fallbacks)
- **Base Size**: 14px (increased for better readability)
- **Small**: 12px, **Large**: 16px, **Heading**: 20px
- **Line Height**: 1.4 for improved readability

## Current CSS Class Architecture

### 1. Component-Based Classes (Primary Pattern)
```css
.app-*           /* Application-level components */
.results-*       /* Results display components */
.video-*         /* Video-related components */
.tag-*           /* Tag input components */
.analysis-*      /* Analytics components (NOT analytics-*) */
.cached-*        /* Cache-related components */
.loading-*       /* Loading/spinner components */
.message-*       /* Message/notification components */
```

### 2. Windows XP System Classes
```css
.xp-button       /* All buttons with XP styling */
.xp-input        /* All input fields with inset borders */
.window-frame    /* XP window containers */
.window-title-bar /* XP title bars with gradients */
```

### 3. Layout Classes
```css
.form-section           /* Form containers */
.form-row              /* Form row layouts */
.results-section       /* Main results area */
.analytics-section     /* Analytics display area */
.cached-channels-section /* Cache management area */
```

### 4. State Classes
```css
.active          /* Active state (tabs, buttons) */
.disabled        /* Disabled state */
.focused         /* Focus state */
.hidden          /* Hidden elements */
.has-data        /* Sections with data */
.collapsed       /* Collapsed sections */
.validated       /* Validated inputs */
```

## Critical CSS Class Rules

### ‚úÖ CORRECT Class Usage:
```css
/* Analytics Components - ALWAYS use analysis-* */
.analysis-section       /* Main analytics container */
.analysis-panel        /* Individual analytics panels */
.analysis-grid         /* Grid layout for stats */
.analysis-stat         /* Individual statistic displays */
.chart-panel          /* Chart containers */
.chart-container      /* Chart canvas wrappers */

/* Form Components */
.form-section         /* Form containers */
.api-section         /* API key sections */
.demo-button-container /* Demo mode buttons */

/* Results Components */
.results-component    /* Results display */
.results-header      /* Results header area */
.results-controls    /* Control panels */
.video-display-container /* Video list area */
```

### ‚ùå NEVER Use These:
```css
.analytics-*         /* Use analysis-* instead */
.customButton        /* Use xp-button instead */
.myComponent         /* Use kebab-case */
```

## Windows XP Authentic Styling

### Button Styling (Current Implementation)
```css
.xp-button {
  background: linear-gradient(135deg, var(--xp-button-face) 0%, var(--xp-window-bg-dark) 100%);
  border: 1px outset var(--xp-button-face);
  border-radius: var(--xp-border-radius);
  transition: all var(--xp-transition-normal);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.xp-button:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.xp-button:active {
  border: 1px inset var(--xp-button-face);
  transform: translateY(0) scale(1.01);
}
```

### Input Styling (Current Implementation)
```css
.xp-input {
  border: 1px inset var(--xp-window-bg);
  background: var(--xp-input-bg);
  border-radius: var(--xp-border-radius);
  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
  transition: all var(--xp-transition-normal);
}
```

## Component-Specific Guidelines

### Analytics Components
```javascript
// ‚úÖ Correct Implementation
analyticsSection.innerHTML = `
  <div class="analysis-panel">
    <h3>üìä Analytics Title</h3>
    <div class="analysis-grid">
      <div class="analysis-stat">
        <h4>12,345</h4>
        <p>Statistic Label</p>
      </div>
    </div>
  </div>
`;

// ‚ùå Wrong Implementation
analyticsSection.innerHTML = `
  <div class="analytics-card">  // Should be analysis-panel
    <div class="analytics-grid"> // Should be analysis-grid
      <div class="metric">       // Should be analysis-stat
```

### Form Components
```javascript
// ‚úÖ Correct Form Structure
<div class="form-section">
  <div class="form-row">
    <input class="xp-input large" />
    <button class="xp-button success">Submit</button>
  </div>
</div>
```

### Results Components
```javascript
// ‚úÖ Correct Results Structure
<div class="results-section">
  <div class="results-component">
    <div class="results-header">
      <div class="results-count">Found X videos</div>
    </div>
    <div class="video-display-container">
      <!-- Video list content -->
    </div>
  </div>
</div>
```

## JavaScript Integration

### CSS Class Management
```javascript
// ‚úÖ Correct Usage
element.className = 'analysis-panel';
element.classList.add('active', 'has-data');
document.querySelector('.xp-button');

// ‚ùå Incorrect Usage
element.className = 'analytics-grid'; // Use analysis-grid
element.className = 'btn';           // Use xp-button
```

### Component State Management
```javascript
// ‚úÖ State Classes
formSection.classList.toggle('disabled');
resultSection.classList.add('has-data');
cacheSection.classList.toggle('collapsed');
```

## File Organization

### CSS Architecture:
```
src/styles/main.css              /* Main stylesheet (5900+ lines) */
‚îú‚îÄ‚îÄ CSS Variables                /* Windows XP design system */
‚îú‚îÄ‚îÄ Base Styles                  /* Typography, buttons, inputs */
‚îú‚îÄ‚îÄ Component Styles             /* App, results, analytics, etc. */
‚îî‚îÄ‚îÄ Responsive Styles            /* Mobile adaptations */

src/css/components/              /* Component-specific CSS */
‚îî‚îÄ‚îÄ cached-channels.css          /* Cache component styles */
```

### Import Pattern:
```css
/* In main.css */
@import '../css/components/cached-channels.css';
```

## Responsive Design (Updated)

### Breakpoints (Current)
- **Desktop**: 1024px+ (primary XP experience)
- **Tablet**: 768px-1023px (adapted XP with larger touch targets)
- **Mobile**: <768px (simplified XP maintaining core aesthetics)

### Mobile Adaptations
- Larger touch targets (44px minimum)
- Simplified 3D effects for performance
- Collapsible sections with XP styling
- Maintained color scheme and typography

## Testing & Validation

### CSS-JS Consistency Checklist
- [ ] All JavaScript class references exist in CSS
- [ ] Analytics components use `analysis-*` classes
- [ ] All buttons use `xp-button` variants
- [ ] All inputs use `xp-input` variants
- [ ] State classes are consistent across components
- [ ] Component sections use appropriate `-section` classes

### Browser Testing
- Chrome/Edge: Full XP styling support
- Firefox: XP styling with vendor prefixes
- Safari: XP styling with webkit prefixes
- Mobile browsers: Simplified XP experience

## Performance Considerations

### CSS Optimization
- Use CSS variables for consistent theming
- Leverage hardware acceleration for animations
- Minimize DOM manipulation
- Use efficient selectors

### Animation Performance
```css
/* ‚úÖ Use transforms for animations */
.xp-button:hover {
  transform: translateY(-1px) scale(1.02);
}

/* ‚ùå Avoid animating layout properties */
.xp-button:hover {
  top: -1px; /* Causes layout */
  width: 102%; /* Causes layout */
}
```
