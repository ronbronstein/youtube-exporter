---
description: When making code changes, creating new files, editing current ones.
globs: 
alwaysApply: false
---
# Coding Standards

## JavaScript
- **ES6+** syntax (const/let, arrow functions, async/await)
- **Single quotes** for strings
- **Semicolons** required
- **2-space indentation**
- **camelCase** for variables and functions
- **PascalCase** for classes/constructors

## Functions
```javascript
// ✅ Good
const processVideo = async (videoData) => {
  try {
    const result = await analyzeVideo(videoData);
    return result;
  } catch (error) {
    console.error('Process video failed:', error);
    throw error;
  }
};

// ❌ Bad
function process_video(video_data) {
  // no error handling
  return analyze_video(video_data)
}
```

## Error Handling
- **Always** wrap API calls in try/catch
- **Log errors** with context
- **Show user-friendly** error messages
- **Fail gracefully** - don't break the UI

## CSS Classes
- Use **kebab-case**: `.video-list`, `.api-key-input`
- **analysis-*** not `analytics-*`
- **xp-*** prefix for Windows XP UI elements

## Comments
```javascript
// Single line for brief explanations
/* Multi-line for complex logic explanations */
```

## Files to Follow
- [src/js/components/App.js](mdc:src/js/components/App.js) - Main patterns
- [src/js/services/](mdc:src/js/services) - Service layer patterns
